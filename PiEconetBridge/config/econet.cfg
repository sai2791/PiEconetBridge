#
# Format
# (n & s are network & station number respectively. Stations on your local Econet should have network number 0.
# If you have remote machines on IP which are 'bridged' into your local network, they should also be listed
# as network number 0.)
# M n s port - Station n.s is handled internally in the bridge code - will respond via IP to AUN packets and off the wire
# A n s Host/IP port - station n.s is reacahable via IP at host:port using AUN format packets
# W n s port - Station n.s is reachable on the attached Econet wire, and the bridge should listen for AUN format traffic on the specified port
# P n s <printer> - Providing n s &
# 
# Hosts defined above with a network number other than 0 will have their network numbers advertised in Bridge query responses and broadcasts on the Econet.

# Local network number as seen by distant hosts other than those configured on net 0
#N 9

# Hosts on the wire; UDP listener in raw mode
#W 0 1 32768
#W 0 2 32769

# Distant hosts for which we bridge off our wire, AUN mode
#A 0 254 mancavepc 32768
#A 0 102 mancavepc 32769
#A 0 103 mancavepc 32770

# Distant hosts which are on other network numbers
#A 27 254 192.168.1.1 32801

# A local host inside the bridge with a print server, jobs sent to printer 'mancave'
#P 0 252 32771 mancave
# A local host inside the bridge with a print server which emails the text to the given address. Requires working /usr/sbin/sendmail
#P 0 253 32772 user@email.org

# Create a locally emulated fileserver in the /econet directory. See the README
# for how this can be used. Ensure /econet is owned by the user you run the
# bridge utility as!
#F 0 251 32773 /econet
#

# Network number from which to assign dynamic station addresses for AUN traffic from unknown sources
#L 99

# Trunk and firewalling. Suggested port numbers for trunks are those below 32768 so they do not interfere with AUTO stations
# Trunks exchange bridge broadcasts to learn which networks are at each end in the same way wired bridges do. Indeed,
# the bridge will put out bridge reset (&80) and update (&81) broadcasts on the wire according to what it learns on the
# trunks and from its config. So there is no need to specify which networks are where.
# A trunk will refuse to 'trombone' the same network - i.e. it will not advertise to peer X a network number which peer X
# has previously advertised to it.
# The bridge will also forward between trunks, so that it is possible to have a fairly complex network of trunks.
# If you do the right address translation, you will be able to create a loop - so be careful.
# 
# Format: T trunknumber localport distanthostname distanttrunkport
#
# So, trunk number 1 on local port 32767 to host 1.1.1.1 :32766 looks like this
T 1 32767 1.1.1.1 32766

# And if we want to firewall traffic on trunk 1 (NB only done *inbound*), we put in an entry like this
# Y trunknumber sourcenet sourcehost localnet localhost DROP|ACCEPT
# Firewall traffic on trunk 1 from distant host 5.10 to local station 0.254, but allow everything else
# looks like the example below
# NB:
#  - Rules are evaluated IN order for each trunk
#  - 255 is a wildcard for a network or host number. It does NOT mean broadcast.
#  - ACCEPT is the default policy
#  - Net numbers must be as seen AFTER address translation - see below.
#  - In particular, if the real host is on net 0 (local wire), specify it as net 0.
#Y 1 5 10 0 254 DROP
#
# Further example
# Allow traffic from hosts 5.254, 6.99 and 8.22 on trunk 1 to our local fileserver
# Stop any other host accessing it
# So those three stations (5.254 etc.) have access to everything; nothing else has access to the filestore, but all stations can access everything else
#Y 1 5 254 0 254 ACCEPT
#Y 1 6 99 0 254 ACCEPT
#Y 1 8 22 0 254 ACCEPT
#Y 1 255 255 0 254 DROP

# Address translation - happens bidirectionally on trunks only. (So when traffic comes in for the translated net number,
# it is untranslated. If that yields our local net number (L) then it will be translated to 0 to match the local config.
# Format: X trunknumber localnetwork seenas
# E.g. our local network 1 is seen at the other end of trunk 1 as network 10
# X 1 1 10
